--- a/arch/i386/Makefile
+++ b/arch/i386/Makefile
@@ -94,7 +94,10 @@ endif
 
 # Disable unit-at-a-time mode on pre-gcc-4.0 compilers, it makes gcc use
 # a lot more stack due to the lack of sharing of stacklots.
-CFLAGS += $(call if_gcc4,,$(call check_gcc,-fno-unit-at-a-time,))
+# CFLAGS += $(call if_gcc4,,$(call check_gcc,-fno-unit-at-a-time,))
+# Disable unit-at-a-time on gcc >= 4 too, because it removes seemingly unused
+# variables which are indeed module params.
+CFLAGS += $(call check_gcc,-fno-unit-at-a-time,)
 
 HEAD := arch/i386/kernel/head.o arch/i386/kernel/init_task.o
 
--- a/arch/i386/mm/init.c
+++ b/arch/i386/mm/init.c
@@ -381,7 +381,7 @@ void __init paging_init(void)
  * This function cannot be __init, since exceptions don't work in that
  * section.
  */
-static int do_test_wp_bit(unsigned long vaddr);
+static int __attribute__((noinline)) do_test_wp_bit(unsigned long vaddr);
 
 void __init test_wp_bit(void)
 {
@@ -561,8 +561,8 @@ void __init mem_init(void)
 
 }
 
-/* Put this after the callers, so that it cannot be inlined */
-static int do_test_wp_bit(unsigned long vaddr)
+/* This function must not be inlined */
+static int __attribute__((noinline)) do_test_wp_bit(unsigned long vaddr)
 {
 	char tmp_reg;
 	int flag;
