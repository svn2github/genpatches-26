Backported from 2.6.15 by Kerin Millar <kerframil@gmail.com>:

From stable-bounces@linux.kernel.org  Thu Jan 12 19:27:22 2006
Date: Mon, 9 Jan 2006 11:15:33 -0800
From: Linux Kernel Mailing List <linux-kernel@vger.kernel.org>
Subject: [BLOCK] Kill blk_attempt_remerge()

From: Jens Axboe <axboe@suse.de>

[BLOCK] Kill blk_attempt_remerge()

It's a broken interface, it's done way too late. And apparently it triggers
slab problems in recent kernels as well (most likely after the generic dispatch
code was merged). So kill it, ide-cd is the only user of it.

Signed-off-by: Jens Axboe <axboe@suse.de>
chrisw: backport to 2.6.15 tree
Signed-off-by: Chris Wright <chrisw@sous-sol.org>
---

--- linux-2.6.14.orig/drivers/block/ll_rw_blk.c	2005-10-28 01:02:08.000000000 +0100
+++ linux-2.6.14/drivers/block/ll_rw_blk.c	2006-01-23 19:18:26.000000000 +0000
@@ -2609,30 +2609,6 @@
 	return 0;
 }
 
-/**
- * blk_attempt_remerge  - attempt to remerge active head with next request
- * @q:    The &request_queue_t belonging to the device
- * @rq:   The head request (usually)
- *
- * Description:
- *    For head-active devices, the queue can easily be unplugged so quickly
- *    that proper merging is not done on the front request. This may hurt
- *    performance greatly for some devices. The block layer cannot safely
- *    do merging on that first request for these queues, but the driver can
- *    call this function and make it happen any way. Only the driver knows
- *    when it is safe to do so.
- **/
-void blk_attempt_remerge(request_queue_t *q, struct request *rq)
-{
-	unsigned long flags;
-
-	spin_lock_irqsave(q->queue_lock, flags);
-	attempt_back_merge(q, rq);
-	spin_unlock_irqrestore(q->queue_lock, flags);
-}
-
-EXPORT_SYMBOL(blk_attempt_remerge);
-
 static int __make_request(request_queue_t *q, struct bio *bio)
 {
 	struct request *req;
--- linux-2.6.14.orig/drivers/ide/ide-cd.c	2005-10-28 01:02:08.000000000 +0100
+++ linux-2.6.14/drivers/ide/ide-cd.c	2006-01-23 19:17:37.000000000 +0000
@@ -1333,8 +1333,6 @@
 	if (cdrom_read_from_buffer(drive))
 		return ide_stopped;
 
-	blk_attempt_remerge(drive->queue, rq);
-
 	/* Clear the local sector buffer. */
 	info->nsectors_buffered = 0;
 
@@ -1884,8 +1882,6 @@
 	 * remerge requests, often the plugging will not have had time
 	 * to do this properly
 	 */
-	blk_attempt_remerge(drive->queue, rq);
-
 	info->nsectors_buffered = 0;
 
 	/* use dma, if possible. we don't need to check more, since we
--- linux-2.6.14.orig/include/linux/blkdev.h	2005-10-28 01:02:08.000000000 +0100
+++ linux-2.6.14/include/linux/blkdev.h	2006-01-23 19:18:44.000000000 +0000
@@ -549,7 +549,6 @@
 extern void generic_make_request(struct bio *bio);
 extern void blk_put_request(struct request *);
 extern void blk_end_sync_rq(struct request *rq);
-extern void blk_attempt_remerge(request_queue_t *, struct request *);
 extern struct request *blk_get_request(request_queue_t *, int, int);
 extern void blk_insert_request(request_queue_t *, struct request *, int, void *);
 extern void blk_requeue_request(request_queue_t *, struct request *);
