# This is a BitKeeper generated diff -Nru style patch.
#
# ChangeSet
#   2004/11/16 17:39:02-08:00 chrisw@osdl.org 
#   [PATCH] a.out: error check on set_brk
#   
#   It's possible for do_brk() to fail during set_brk() when exec'ing and
#   a.out.  This was noted with Florian's a.out binary and overcommit set to
#   0. 
#   
#   Capture this error and terminate properly.
#   
#   Signed-off-by: Chris Wright <chrisw@osdl.org>
#   Signed-off-by: Linus Torvalds <torvalds@osdl.org>
# 
# fs/binfmt_aout.c
#   2004/11/11 22:28:58-08:00 chrisw@osdl.org +14 -5
#   a.out: error check on set_brk
# 
diff -Nru a/fs/binfmt_aout.c b/fs/binfmt_aout.c
--- a/fs/binfmt_aout.c	2004-12-02 12:18:53 -08:00
+++ b/fs/binfmt_aout.c	2004-12-02 12:18:53 -08:00
@@ -43,13 +43,18 @@
 	.min_coredump	= PAGE_SIZE
 };
 
-static void set_brk(unsigned long start, unsigned long end)
+#define BAD_ADDR(x)	((unsigned long)(x) >= TASK_SIZE)
+
+static int set_brk(unsigned long start, unsigned long end)
 {
 	start = PAGE_ALIGN(start);
 	end = PAGE_ALIGN(end);
-	if (end <= start)
-		return;
-	do_brk(start, end - start);
+	if (end > start) {
+		unsigned long addr = do_brk(start, end - start);
+		if (BAD_ADDR(addr))
+			return addr;
+	}
+	return 0;
 }
 
 /*
@@ -413,7 +418,11 @@
 beyond_if:
 	set_binfmt(&aout_format);
 
-	set_brk(current->mm->start_brk, current->mm->brk);
+	retval = set_brk(current->mm->start_brk, current->mm->brk);
+	if (retval < 0) {
+		send_sig(SIGKILL, current, 0);
+		return retval;
+	}
 
 	retval = setup_arg_pages(bprm, EXSTACK_DEFAULT);
 	if (retval < 0) { 
