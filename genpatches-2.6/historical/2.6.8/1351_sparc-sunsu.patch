In mainline
fixes an oops in the serial subsystem when using a agetty/login on ttyS[01]
http://marc.theaimsgroup.com/?l=linux-sparc&m=109926021829075&w=2

--- linux-2.6.7/drivers/serial/sunsu.c.orig	2004-06-15 22:19:01.000000000 -0700
+++ linux-2.6.7/drivers/serial/sunsu.c	2004-11-28 21:28:59.317749534 -0800
@@ -95,7 +95,6 @@
 	enum su_type		su_type;
 	unsigned int		type_probed;	/* XXX Stupid */
 	int			port_node;
-	unsigned int		irq;
 
 #ifdef CONFIG_SERIO
 	struct serio		serio;
@@ -684,14 +683,14 @@
 	}
 
 	if (up->su_type != SU_PORT_PORT) {
-		retval = request_irq(up->irq, sunsu_kbd_ms_interrupt,
+		retval = request_irq(up->port.irq, sunsu_kbd_ms_interrupt,
 				     SA_SHIRQ, su_typev[up->su_type], up);
 	} else {
-		retval = request_irq(up->irq, sunsu_serial_interrupt,
+		retval = request_irq(up->port.irq, sunsu_serial_interrupt,
 				     SA_SHIRQ, su_typev[up->su_type], up);
 	}
 	if (retval) {
-		printk("su: Cannot register IRQ %d\n", up->irq);
+		printk("su: Cannot register IRQ %d\n", up->port.irq);
 		return retval;
 	}
 
@@ -779,7 +778,7 @@
 	 */
 	(void) serial_in(up, UART_RX);
 
-	free_irq(up->irq, up);
+	free_irq(up->port.irq, up);
 }
 
 static void
@@ -1078,7 +1077,7 @@
 				 * This is correct on both architectures.
 				 */
 				up->port.mapbase = dev->resource[0].start;
-				up->irq = dev->irqs[0];
+				up->port.irq = dev->irqs[0];
 				goto ebus_done;
 			}
 		}
@@ -1091,7 +1090,7 @@
 				/* Same on sparc64. Cool architecure... */
 				up->port.membase = (char *) isa_dev->resource.start;
 				up->port.mapbase = isa_dev->resource.start;
-				up->irq = isa_dev->irq;
+				up->port.irq = isa_dev->irq;
 				goto ebus_done;
 			}
 		}
@@ -1133,7 +1132,7 @@
 	/*
 	 * There is no intr property on MrCoffee, so hardwire it.
 	 */
-	up->irq = IRQ_4M(13);
+	up->port.irq = IRQ_4M(13);
 #endif
 
 ebus_done:
@@ -1305,7 +1304,7 @@
 
 		printk(KERN_INFO "su%d at 0x%p (irq = %s) is a %s\n",
 		       i,
-		       up->port.membase, __irq_itoa(up->irq),
+		       up->port.membase, __irq_itoa(up->port.irq),
 		       sunsu_type(&up->port));
 
 #ifdef CONFIG_SERIO
