# This is a BitKeeper generated diff -Nru style patch.
#
# ChangeSet
#   2004/11/19 23:02:41-08:00 jmorris@redhat.com 
#   [AF_UNIX]: Don't lose ECONNRESET in unix_seqpacket_sendmsg()
#   
#   The fix for SELinux w/SOCK_SEQPACKET had an error,
#   noted by Alan Cox.  This fixes it.
#   
#   Signed-off-by: James Morris <jmorris@redhat.com>
#   Signed-off-by: David S. Miller <davem@davemloft.net>
# 
# net/unix/af_unix.c
#   2004/11/19 23:02:22-08:00 jmorris@redhat.com +7 -2
#   [AF_UNIX]: Don't lose ECONNRESET in unix_seqpacket_sendmsg()
#   
#   The fix for SELinux w/SOCK_SEQPACKET had an error,
#   noted by Alan Cox.  This fixes it.
#   
#   Signed-off-by: James Morris <jmorris@redhat.com>
#   Signed-off-by: David S. Miller <davem@davemloft.net>
# 
diff -Nru a/net/unix/af_unix.c b/net/unix/af_unix.c
--- a/net/unix/af_unix.c	2004-12-19 14:47:16 -08:00
+++ b/net/unix/af_unix.c	2004-12-19 14:47:16 -08:00
@@ -1513,13 +1513,18 @@
 static int unix_seqpacket_sendmsg(struct kiocb *kiocb, struct socket *sock,
 				  struct msghdr *msg, size_t len)
 {
+	int err;
 	struct sock *sk = sock->sk;
 	
+	err = sock_error(sk);
+	if (err)
+		return err;
+
 	if (sk->sk_state != TCP_ESTABLISHED)
 		return -ENOTCONN;
 
-	if (msg->msg_name || msg->msg_namelen)
-		return -EINVAL;
+	if (msg->msg_namelen)
+		msg->msg_namelen = 0;
 
 	return unix_dgram_sendmsg(kiocb, sock, msg, len);
 }
