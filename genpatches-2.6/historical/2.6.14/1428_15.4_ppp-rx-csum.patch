Re-diffed for 2.6.14.7 by Kerin Millar <kerframil@gmail.com>:

From stable-bounces@linux.kernel.org  Sun Feb  5 21:00:48 2006
Date: Sun, 05 Feb 2006 20:27:05 -0800 (PST)
From: "David S. Miller" <davem@davemloft.net>
To: stable@kernel.org
Cc: 
Subject: [PPP]: Fixed hardware RX checksum handling

From: Herbert Xu <herbert@gondor.apana.org.au>
    
When we pull the PPP protocol off the skb, we forgot to update the
hardware RX checksum.  This may lead to messages such as

	dsl0: hw csum failure.
    
Similarly, we need to clear the hardware checksum flag when we use
the existing packet to store the decompressed result.

Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
Signed-off-by: David S. Miller <davem@davemloft.net>
Signed-off-by: Chris Wright <chrisw@sous-sol.org>
---

--- linux-2.6.14.7.orig/drivers/net/ppp_generic.c	2005-10-27 19:02:08.000000000 -0500
+++ linux-2.6.14.7/drivers/net/ppp_generic.c	2006-02-06 21:49:54.000000000 -0500
@@ -1573,6 +1573,8 @@ ppp_receive_nonmp_frame(struct ppp *ppp,
 		}
 		else if (!pskb_may_pull(skb, skb->len))
 			goto err;
+		else
+			skb->ip_summed = CHECKSUM_NONE;
 
 		len = slhc_uncompress(ppp->vj, skb->data + 2, skb->len - 2);
 		if (len <= 0) {
@@ -1653,6 +1655,7 @@ ppp_receive_nonmp_frame(struct ppp *ppp,
 			kfree_skb(skb);
 		} else {
 			skb_pull(skb, 2);	/* chop off protocol */
+			skb_postpull_rcsum(skb, skb->data - 2, 2);
 			skb->dev = ppp->dev;
 			skb->protocol = htons(npindex_to_ethertype[npi]);
 			skb->mac.raw = skb->data;
