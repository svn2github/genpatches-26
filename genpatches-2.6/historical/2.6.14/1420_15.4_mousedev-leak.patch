Re-diffed for 2.6.14.7 by Kerin Millar <kerframil@gmail.com>:

From stable-bounces@linux.kernel.org  Wed Feb  1 21:18:54 2006
Date: Thu, 02 Feb 2006 00:08:59 -0500
From: Dmitry Torokhov <dtor_core@ameritech.net>
To: stable@kernel.org
Cc: 
Subject: Input: mousedev - fix memory leak

From: Kimball Murray <kimball.murray@stratus.com>

Input: mousedev - fix memory leak

Apparently, "while true; do cat </dev/null >/dev/input/mice; done" causes
an OOM in a short amount of time. Funny that nobody noticed, it actually
is very easy to trigger just by switching between VT1 and VT7...

Signed-off-by: Pete Zaitcev <zaitcev@redhat.com>
Signed-off-by: Dmitry Torokhov <dtor@mail.ru>
Signed-off-by: Chris Wright <chrisw@sous-sol.org>
---

--- linux-2.6.14.7.orig/drivers/input/mousedev.c	2005-10-27 19:02:08.000000000 -0500
+++ linux-2.6.14.7/drivers/input/mousedev.c	2006-02-06 20:12:43.000000000 -0500
@@ -357,7 +357,7 @@ static void mousedev_free(struct mousede
 	kfree(mousedev);
 }
 
-static int mixdev_release(void)
+static void mixdev_release(void)
 {
 	struct input_handle *handle;
 
@@ -371,8 +371,6 @@ static int mixdev_release(void)
 				mousedev_free(mousedev);
 		}
 	}
-
-	return 0;
 }
 
 static int mousedev_release(struct inode * inode, struct file * file)
@@ -385,9 +383,8 @@ static int mousedev_release(struct inode
 
 	if (!--list->mousedev->open) {
 		if (list->mousedev->minor == MOUSEDEV_MIX)
-			return mixdev_release();
-
-		if (!mousedev_mix.open) {
+			mixdev_release();
+		else if (!mousedev_mix.open) {
 			if (list->mousedev->exist)
 				input_close_device(&list->mousedev->handle);
 			else
