#!/bin/bash

#updated for 3.0

function usage {
	echo ">>> USAGE: gpdorelease <version>"
    echo "For kernel versions < 3, use the entire version: gpdorelease 2.6.39"
    echo " "
    echo "For kernels > 3: "
    echo "  Use the major and minor versions only. "
    echo "  Example for kernel version 3.0:  gpdorelease 3.0"
    echo "  Example for kernel version 3.0.1: gpdorelease 3.0"
    echo "  Example for kernel version 3.1:  gpdorelease 3.1"
    echo "  Example for kernel version 3.1.1:  gpdorelease 3.1"
}

if [[ ${#@} == 0 ]] ; then
    usage
    exit -1
fi

if [[ ${1} == "--config" ]] ; then
	echo "Sourcing ${2} instead of ~/.genpatchesrc"
	source ${2}
	shift 2
    if [[ ${#@} == 0 ]] ; then
        usage
        exit -1
    fi
else
	echo "Using default config at ~/.genpatchesrc"
	source ~/.genpatchesrc
fi

BRANCH="$1"

if [[ $(svn status ${LOCAL_PATCHES_TRUNK} | wc -l) != "0" ]] ; then
	echo ">>> ERROR: There are uncommited changes in ${LOCAL_PATCHES_TRUNK}"
	exit -1
fi

EXISTING_TAGS="$(svn ls ${REMOTE_TAGS})"

lastver=0
for i in $EXISTING_TAGS ; do
	tag="${i%/}"
	if [[ ${tag/-*} == $BRANCH && ${tag#*-} -gt $lastver ]] ; then
		lastrelease="${tag}"
		lastver="${tag#*-}"
	fi
done

if [[ -z $lastrelease ]] ; then
	newrel="1"
else
	newrel="${lastrelease#${BRANCH}-}"
	(( newrel++ ))
fi

newfullver="${BRANCH}-${newrel}"

echo "I will now:"
echo "1. Tag the ${BRANCH} branch as ${newfullver} (immediate commit)"
echo "2. Produce genpatches-${newfullver} tarballs"
echo "3. Upload tarballs to distfiles-local"
echo "4. (Optionally) create and upload website"
echo "5. (Optionally) send a release announcement to gentoo-kernel"
echo
echo "Make sure everything is already committed and ready to roll."
echo "Press enter to continue."

read

svn copy ${REMOTE_TRUNK}/${BRANCH} ${REMOTE_TAGS}/${newfullver} -m "${newfullver} release"

file_base="/tmp/${TARBALL_BASENAME}-$newfullver.base.tar.xz"
file_extras="/tmp/${TARBALL_BASENAME}-$newfullver.extras.tar.xz"
file_experimental="/tmp/${TARBALL_BASENAME}-$newfullver.experimental.tar.xz"
dir="${BRANCH}"
cd ${LOCAL_PATCHES_TRUNK}

if [[ "${WE_WANT}" == *"base"* ]] ; then
	[ -n "$(find ${dir}/[012]* 2>/dev/null)" ] && tar -cvJf ${file_base} ${dir}/[012]*
fi

if [[ "${WE_WANT}" == *"extras"* ]] ; then
	[ -n "$(find ${dir}/[34]* 2>/dev/null)" ] && tar -cvJf ${file_extras} ${dir}/[34]*
fi

if [[ "${WE_WANT}" == *"experimental"* ]] ; then
	[ -n "$(find ${dir}/50* 2>/dev/null)" ] && tar -cvJf ${file_experimental} ${dir}/[34]*
fi

scp /tmp/${TARBALL_BASENAME}-$newfullver.* ${USERNAME}@dev.gentoo.org:/space/distfiles-local

if [[ ${DO_WEBSITE} == "yes" ]] ; then
	mv ${file_base} ${file_extras} ${file_experimental} ${WEB_LOCAL}/tarballs/
	gpdoweb
fi

[[ ${DO_EMAIL_ANNOUNCEMENT} == "yes" ]] && gpdoemail $newfullver $KERNEL_NAME
